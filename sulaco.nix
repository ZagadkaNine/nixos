# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ 
    (modulesPath + "/installer/scan/not-detected.nix")
    ./configuration.nix
    ./zagadkanine.nix 
    ./modules/nixos/hyprland.nix
    #./modules/nixos/i3_gnome.nix
    #./modules/nixos/x11_gnome.nix
  ];

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  networking.hostName = "sulaco"; # Define your hostname.

  boot.initrd.availableKernelModules = [ 
    "xhci_pci"
    "thunderbolt"
    "nvme" 
    "usb_storage" 
    "sd_mod" 
    "rtsx_pci_sdmmc" 
  ];
  boot.kernelPackages = pkgs.linuxPackages_latest; 
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ 
    "kvm-intel" 
    #"nvidia"
    "nvidia_uvm"
    "nvidia_modeset"
    "nvidia_drm"
  ];
  boot.kernelParams = [ 
    "nvidia-drm.modeset=1"
  ];

  boot.extraModulePackages = [ ];

  fileSystems."/" = { 
    device = "/dev/disk/by-uuid/195665ac-0b24-4b12-b699-2c236b6160d6";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-b5b6264b-aaeb-4024-971d-9d03b0ea806e".device = "/dev/disk/by-uuid/b5b6264b-aaeb-4024-971d-9d03b0ea806e";

  fileSystems."/boot" = { 
    device = "/dev/disk/by-uuid/CD45-A87A";
    fsType = "vfat";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware = {
    opengl.enable = true;
    nvidia = {
      package = pkgs.linuxPackages_latest.nvidiaPackages.production;
      modesetting.enable = true;
      powerManagement.enable = false;
      open = false;
      nvidiaSettings = true;
      prime = {
        sync.enable = true;
        nvidiaBusId = "PCI:1:0:0";
        intelBusId = "PCI:0:2:0";
      };
    };
  };
}
